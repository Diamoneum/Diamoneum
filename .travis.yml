language: cpp

matrix:
    include:
        - name: "Android, Debug"
          os: linux
          dist: xenial
          sudo: required
          env:
              - CMAKE_GENERATOR_NAME="Unix Makefiles"
              - CMAKE_BUILD_TYPE="Debug"
              - CMAKE_TOOLCHAIN_FILE_NAME=android-ndk-r18b-api-21-x86-clang-libcxx.cmake
        - name: "Android, Release"
          os: linux
          dist: xenial
          sudo: required
          env:
              - CMAKE_GENERATOR_NAME="Unix Makefiles"
              - CMAKE_BUILD_TYPE="Release"
              - CMAKE_TOOLCHAIN_FILE_NAME=android-ndk-r18b-api-21-x86-clang-libcxx.cmake
        - name: "Linux, Debug"
          os: linux
          dist: xenial
          sudo: required
          env:
              - CMAKE_GENERATOR_NAME="Unix Makefiles"
              - CMAKE_BUILD_TYPE="Debug"
              - CMAKE_TOOLCHAIN_FILE_NAME=gcc-cxx14-c11.cmake
        - name: "Linux, Release"
          os: linux
          dist: xenial
          sudo: required
          env:
              - CMAKE_GENERATOR_NAME="Unix Makefiles"
              - CMAKE_BUILD_TYPE="Release"
              - CMAKE_TOOLCHAIN_FILE_NAME=gcc-cxx14-c11.cmake
        - name: "macOS, Debug"
          os: osx
          osx_image: xcode10.1
          env:
              - CMAKE_GENERATOR_NAME="Unix Makefiles"
              - CMAKE_BUILD_TYPE="Debug"
              - CMAKE_TOOLCHAIN_FILE_NAME=clang-cxx14.cmake
        - name: "macOS, Release"
          os: osx
          osx_image: xcode10.1
          env:
              - CMAKE_GENERATOR_NAME="Unix Makefiles"
              - CMAKE_BUILD_TYPE="Release"
              - CMAKE_TOOLCHAIN_FILE_NAME=clang-cxx14.cmake

addons:
    apt: # Linux
        packages:
            - build-essential
            - cmake
            - git
            - unzip
            - wget
            - lcov
        sources:
            - ubuntu-toolchain-r-test
    homebrew: # macOS
        packages:
            - cmake
            - git
            - lcov

cache:
    directories:
        - $HOME/.hunter

before_install:
    - |
        if [ "$CMAKE_TOOLCHAIN_FILE_NAME" = "android-ndk-r18b-api-21-x86-clang-libcxx.cmake" ]; then
            echo "Installing Android NDK..."
            mkdir -p "$HOME/.android"
            wget -O "$HOME/.android/android-ndk-r18b-linux-x86_64.zip" "https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip"
            unzip -qq "$HOME/.android/android-ndk-r18b-linux-x86_64.zip" -d "$HOME/.android"
            export ANDROID_NDK_r18b="$HOME/.android/android-ndk-r18b"
            ls -la "$ANDROID_NDK_r18b"
        fi

script:
    - mkdir ./build && cd ./build
    - >
        cmake -G "$CMAKE_GENERATOR_NAME"
        -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE
        -DCMAKE_TOOLCHAIN_FILE=cmake/polly/$CMAKE_TOOLCHAIN_FILE_NAME
        -DBUILD_ALL:BOOL=TRUE
        ..
    - cmake --build . --config $CMAKE_BUILD_TYPE -- -j 2
#    - |
#        logger_regexp="=== EVENT #\|SwappedVector\|\[\([a-zA-Z]\+\)\(\/[a-zA-Z0-9]\+\)\?\]"
#        ctest -C $CMAKE_BUILD_TYPE -V -j 2 -R "Tests$" | grep --line-buffered -i -v "$logger_regexp"
    - cpack -C $CMAKE_BUILD_TYPE

#after_success:
#    - |
#        if [ "$CMAKE_TOOLCHAIN_FILE_NAME" = "android-ndk-r18b-api-21-x86-clang-libcxx.cmake" ]; then
#            echo "TODO: Fix and run tests for Android and remove this 'if' statement."
#        elif [ "$CMAKE_BUILD_TYPE" = "Release" ]; then
#            echo "Code-coverage is only available for debug builds. Skipping..."
#        else
#            COVERAGE_FILE="$TRAVIS_BUILD_DIR/build/coverage.info"
#            echo "coverage.info: $COVERAGE_FILE"
#            lcov --capture --directory . --output-file $COVERAGE_FILE
#            lcov --remove $COVERAGE_FILE "/Applications/Xcode*" "/usr/*" "*/boost/*" "*/gtest/*" "*/tests/*" "*/_ExternalProjects/*" --output-file $COVERAGE_FILE
#            lcov --list $COVERAGE_FILE
#            bash <(curl -s https://codecov.io/bash) -f $COVERAGE_FILE || echo "Upload to codecov.io FAILED"
#        fi
